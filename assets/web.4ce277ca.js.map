{"version":3,"file":"web.4ce277ca.js","sources":["../../../../node_modules/.pnpm/solid-js@1.4.8/node_modules/solid-js/dist/solid.js","../../../../node_modules/.pnpm/solid-js@1.4.8/node_modules/solid-js/web/dist/web.js"],"sourcesContent":["let taskIdCounter = 1,\n    isCallbackScheduled = false,\n    isPerformingWork = false,\n    taskQueue = [],\n    currentTask = null,\n    shouldYieldToHost = null,\n    yieldInterval = 5,\n    deadline = 0,\n    maxYieldInterval = 300,\n    scheduleCallback = null,\n    scheduledCallback = null;\nconst maxSigned31BitInt = 1073741823;\nfunction setupScheduler() {\n  const channel = new MessageChannel(),\n        port = channel.port2;\n  scheduleCallback = () => port.postMessage(null);\n  channel.port1.onmessage = () => {\n    if (scheduledCallback !== null) {\n      const currentTime = performance.now();\n      deadline = currentTime + yieldInterval;\n      const hasTimeRemaining = true;\n      try {\n        const hasMoreWork = scheduledCallback(hasTimeRemaining, currentTime);\n        if (!hasMoreWork) {\n          scheduledCallback = null;\n        } else port.postMessage(null);\n      } catch (error) {\n        port.postMessage(null);\n        throw error;\n      }\n    }\n  };\n  if (navigator && navigator.scheduling && navigator.scheduling.isInputPending) {\n    const scheduling = navigator.scheduling;\n    shouldYieldToHost = () => {\n      const currentTime = performance.now();\n      if (currentTime >= deadline) {\n        if (scheduling.isInputPending()) {\n          return true;\n        }\n        return currentTime >= maxYieldInterval;\n      } else {\n        return false;\n      }\n    };\n  } else {\n    shouldYieldToHost = () => performance.now() >= deadline;\n  }\n}\nfunction enqueue(taskQueue, task) {\n  function findIndex() {\n    let m = 0;\n    let n = taskQueue.length - 1;\n    while (m <= n) {\n      const k = n + m >> 1;\n      const cmp = task.expirationTime - taskQueue[k].expirationTime;\n      if (cmp > 0) m = k + 1;else if (cmp < 0) n = k - 1;else return k;\n    }\n    return m;\n  }\n  taskQueue.splice(findIndex(), 0, task);\n}\nfunction requestCallback(fn, options) {\n  if (!scheduleCallback) setupScheduler();\n  let startTime = performance.now(),\n      timeout = maxSigned31BitInt;\n  if (options && options.timeout) timeout = options.timeout;\n  const newTask = {\n    id: taskIdCounter++,\n    fn,\n    startTime,\n    expirationTime: startTime + timeout\n  };\n  enqueue(taskQueue, newTask);\n  if (!isCallbackScheduled && !isPerformingWork) {\n    isCallbackScheduled = true;\n    scheduledCallback = flushWork;\n    scheduleCallback();\n  }\n  return newTask;\n}\nfunction cancelCallback(task) {\n  task.fn = null;\n}\nfunction flushWork(hasTimeRemaining, initialTime) {\n  isCallbackScheduled = false;\n  isPerformingWork = true;\n  try {\n    return workLoop(hasTimeRemaining, initialTime);\n  } finally {\n    currentTask = null;\n    isPerformingWork = false;\n  }\n}\nfunction workLoop(hasTimeRemaining, initialTime) {\n  let currentTime = initialTime;\n  currentTask = taskQueue[0] || null;\n  while (currentTask !== null) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      break;\n    }\n    const callback = currentTask.fn;\n    if (callback !== null) {\n      currentTask.fn = null;\n      const didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n      callback(didUserCallbackTimeout);\n      currentTime = performance.now();\n      if (currentTask === taskQueue[0]) {\n        taskQueue.shift();\n      }\n    } else taskQueue.shift();\n    currentTask = taskQueue[0] || null;\n  }\n  return currentTask !== null;\n}\n\nconst sharedConfig = {};\nfunction setHydrateContext(context) {\n  sharedConfig.context = context;\n}\nfunction nextHydrateContext() {\n  return { ...sharedConfig.context,\n    id: `${sharedConfig.context.id}${sharedConfig.context.count++}-`,\n    count: 0\n  };\n}\n\nconst equalFn = (a, b) => a === b;\nconst $PROXY = Symbol(\"solid-proxy\");\nconst $TRACK = Symbol(\"solid-track\");\nconst $DEVCOMP = Symbol(\"solid-dev-component\");\nconst signalOptions = {\n  equals: equalFn\n};\nlet ERROR = null;\nlet runEffects = runQueue;\nconst NOTPENDING = {};\nconst STALE = 1;\nconst PENDING = 2;\nconst UNOWNED = {\n  owned: null,\n  cleanups: null,\n  context: null,\n  owner: null\n};\nconst [transPending, setTransPending] = /*@__PURE__*/createSignal(false);\nvar Owner = null;\nlet Transition = null;\nlet Scheduler = null;\nlet ExternalSourceFactory = null;\nlet Listener = null;\nlet Pending = null;\nlet Updates = null;\nlet Effects = null;\nlet ExecCount = 0;\nfunction createRoot(fn, detachedOwner) {\n  const listener = Listener,\n        owner = Owner,\n        unowned = fn.length === 0,\n        root = unowned && !false ? UNOWNED : {\n    owned: null,\n    cleanups: null,\n    context: null,\n    owner: detachedOwner || owner\n  },\n        updateFn = unowned ? fn : () => fn(() => cleanNode(root));\n  Owner = root;\n  Listener = null;\n  try {\n    return runUpdates(updateFn, true);\n  } finally {\n    Listener = listener;\n    Owner = owner;\n  }\n}\nfunction createSignal(value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const s = {\n    value,\n    observers: null,\n    observerSlots: null,\n    pending: NOTPENDING,\n    comparator: options.equals || undefined\n  };\n  const setter = value => {\n    if (typeof value === \"function\") {\n      if (Transition && Transition.running && Transition.sources.has(s)) value = value(s.pending !== NOTPENDING ? s.pending : s.tValue);else value = value(s.pending !== NOTPENDING ? s.pending : s.value);\n    }\n    return writeSignal(s, value);\n  };\n  return [readSignal.bind(s), setter];\n}\nfunction createComputed(fn, value, options) {\n  const c = createComputation(fn, value, true, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createRenderEffect(fn, value, options) {\n  const c = createComputation(fn, value, false, STALE);\n  if (Scheduler && Transition && Transition.running) Updates.push(c);else updateComputation(c);\n}\nfunction createEffect(fn, value, options) {\n  runEffects = runUserEffects;\n  const c = createComputation(fn, value, false, STALE),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  Effects ? Effects.push(c) : updateComputation(c);\n}\nfunction createReaction(onInvalidate, options) {\n  let fn;\n  const c = createComputation(() => {\n    fn ? fn() : untrack(onInvalidate);\n    fn = undefined;\n  }, undefined, false, 0),\n        s = SuspenseContext && lookup(Owner, SuspenseContext.id);\n  if (s) c.suspense = s;\n  c.user = true;\n  return tracking => {\n    fn = tracking;\n    updateComputation(c);\n  };\n}\nfunction createMemo(fn, value, options) {\n  options = options ? Object.assign({}, signalOptions, options) : signalOptions;\n  const c = createComputation(fn, value, true, 0);\n  c.pending = NOTPENDING;\n  c.observers = null;\n  c.observerSlots = null;\n  c.comparator = options.equals || undefined;\n  if (Scheduler && Transition && Transition.running) {\n    c.tState = STALE;\n    Updates.push(c);\n  } else updateComputation(c);\n  return readSignal.bind(c);\n}\nfunction createResource(source, fetcher, options) {\n  if (arguments.length === 2) {\n    if (typeof fetcher === \"object\") {\n      options = fetcher;\n      fetcher = source;\n      source = true;\n    }\n  } else if (arguments.length === 1) {\n    fetcher = source;\n    source = true;\n  }\n  options || (options = {});\n  const contexts = new Set(),\n        [value, setValue] = createSignal(options.initialValue),\n        [track, trigger] = createSignal(undefined, {\n    equals: false\n  }),\n        [loading, setLoading] = createSignal(false),\n        [error, setError] = createSignal();\n  let err = undefined,\n      pr = null,\n      initP = null,\n      id = null,\n      loadedUnderTransition = false,\n      scheduled = false,\n      resolved = (\"initialValue\" in options),\n      dynamic = typeof source === \"function\" && createMemo(source);\n  if (sharedConfig.context) {\n    id = `${sharedConfig.context.id}${sharedConfig.context.count++}`;\n    if (sharedConfig.load) initP = sharedConfig.load(id);\n  }\n  function loadEnd(p, v, e, key) {\n    if (pr === p) {\n      pr = null;\n      resolved = true;\n      if (initP && (p === initP || v === initP) && options.onHydrated) queueMicrotask(() => options.onHydrated(key, {\n        value: v\n      }));\n      initP = null;\n      setError(err = e);\n      if (Transition && p && loadedUnderTransition) {\n        Transition.promises.delete(p);\n        loadedUnderTransition = false;\n        runUpdates(() => {\n          Transition.running = true;\n          if (!Transition.promises.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n          completeLoad(v);\n        }, false);\n      } else completeLoad(v);\n    }\n    return v;\n  }\n  function completeLoad(v) {\n    batch(() => {\n      setValue(() => v);\n      setLoading(false);\n      for (const c of contexts.keys()) c.decrement();\n      contexts.clear();\n    });\n  }\n  function read() {\n    const c = SuspenseContext && lookup(Owner, SuspenseContext.id),\n          v = value();\n    if (err) throw err;\n    if (Listener && !Listener.user && c) {\n      createComputed(() => {\n        track();\n        if (pr) {\n          if (c.resolved && Transition) Transition.promises.add(pr);else if (!contexts.has(c)) {\n            c.increment();\n            contexts.add(c);\n          }\n        }\n      });\n    }\n    return v;\n  }\n  function load(refetching = true) {\n    if (refetching && scheduled) return;\n    scheduled = false;\n    setError(err = undefined);\n    const lookup = dynamic ? dynamic() : source;\n    loadedUnderTransition = Transition && Transition.running;\n    if (lookup == null || lookup === false) {\n      loadEnd(pr, untrack(value));\n      return;\n    }\n    if (Transition && pr) Transition.promises.delete(pr);\n    const p = initP || untrack(() => fetcher(lookup, {\n      value: value(),\n      refetching\n    }));\n    if (typeof p !== \"object\" || !(\"then\" in p)) {\n      loadEnd(pr, p);\n      return p;\n    }\n    pr = p;\n    scheduled = true;\n    queueMicrotask(() => scheduled = false);\n    batch(() => {\n      setLoading(true);\n      trigger();\n    });\n    return p.then(v => loadEnd(p, v, undefined, lookup), e => loadEnd(p, e, e));\n  }\n  Object.defineProperties(read, {\n    loading: {\n      get() {\n        return loading();\n      }\n    },\n    error: {\n      get() {\n        return error();\n      }\n    },\n    latest: {\n      get() {\n        if (!resolved) return read();\n        if (err) throw err;\n        return value();\n      }\n    }\n  });\n  if (dynamic) createComputed(() => load(false));else load(false);\n  return [read, {\n    refetch: load,\n    mutate: setValue\n  }];\n}\nfunction createDeferred(source, options) {\n  let t,\n      timeout = options ? options.timeoutMs : undefined;\n  const node = createComputation(() => {\n    if (!t || !t.fn) t = requestCallback(() => setDeferred(() => node.value), timeout !== undefined ? {\n      timeout\n    } : undefined);\n    return source();\n  }, undefined, true);\n  const [deferred, setDeferred] = createSignal(node.value, options);\n  updateComputation(node);\n  setDeferred(() => node.value);\n  return deferred;\n}\nfunction createSelector(source, fn = equalFn, options) {\n  const subs = new Map();\n  const node = createComputation(p => {\n    const v = source();\n    for (const key of subs.keys()) if (fn(key, v) !== fn(key, p)) {\n      const l = subs.get(key);\n      for (const c of l.values()) {\n        c.state = STALE;\n        if (c.pure) Updates.push(c);else Effects.push(c);\n      }\n    }\n    return v;\n  }, undefined, true, STALE);\n  updateComputation(node);\n  return key => {\n    let listener;\n    if (listener = Listener) {\n      let l;\n      if (l = subs.get(key)) l.add(listener);else subs.set(key, l = new Set([listener]));\n      onCleanup(() => {\n        l.delete(listener);\n        !l.size && subs.delete(key);\n      });\n    }\n    return fn(key, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value);\n  };\n}\nfunction batch(fn) {\n  if (Pending) return fn();\n  let result;\n  const q = Pending = [];\n  try {\n    result = fn();\n  } finally {\n    Pending = null;\n  }\n  runUpdates(() => {\n    for (let i = 0; i < q.length; i += 1) {\n      const data = q[i];\n      if (data.pending !== NOTPENDING) {\n        const pending = data.pending;\n        data.pending = NOTPENDING;\n        writeSignal(data, pending);\n      }\n    }\n  }, false);\n  return result;\n}\nfunction untrack(fn) {\n  let result,\n      listener = Listener;\n  Listener = null;\n  result = fn();\n  Listener = listener;\n  return result;\n}\nfunction on(deps, fn, options) {\n  const isArray = Array.isArray(deps);\n  let prevInput;\n  let defer = options && options.defer;\n  return prevValue => {\n    let input;\n    if (isArray) {\n      input = Array(deps.length);\n      for (let i = 0; i < deps.length; i++) input[i] = deps[i]();\n    } else input = deps();\n    if (defer) {\n      defer = false;\n      return undefined;\n    }\n    const result = untrack(() => fn(input, prevInput, prevValue));\n    prevInput = input;\n    return result;\n  };\n}\nfunction onMount(fn) {\n  createEffect(() => untrack(fn));\n}\nfunction onCleanup(fn) {\n  if (Owner === null) ;else if (Owner.cleanups === null) Owner.cleanups = [fn];else Owner.cleanups.push(fn);\n  return fn;\n}\nfunction onError(fn) {\n  ERROR || (ERROR = Symbol(\"error\"));\n  if (Owner === null) ;else if (Owner.context === null) Owner.context = {\n    [ERROR]: [fn]\n  };else if (!Owner.context[ERROR]) Owner.context[ERROR] = [fn];else Owner.context[ERROR].push(fn);\n}\nfunction getListener() {\n  return Listener;\n}\nfunction getOwner() {\n  return Owner;\n}\nfunction runWithOwner(o, fn) {\n  const prev = Owner;\n  Owner = o;\n  try {\n    return runUpdates(fn, true);\n  } finally {\n    Owner = prev;\n  }\n}\nfunction enableScheduling(scheduler = requestCallback) {\n  Scheduler = scheduler;\n}\nfunction startTransition(fn) {\n  if (Transition && Transition.running) {\n    fn();\n    return Transition.done;\n  }\n  const l = Listener;\n  const o = Owner;\n  return Promise.resolve().then(() => {\n    Listener = l;\n    Owner = o;\n    let t;\n    if (Scheduler || SuspenseContext) {\n      t = Transition || (Transition = {\n        sources: new Set(),\n        effects: [],\n        promises: new Set(),\n        disposed: new Set(),\n        queue: new Set(),\n        running: true\n      });\n      t.done || (t.done = new Promise(res => t.resolve = res));\n      t.running = true;\n    }\n    batch(fn);\n    Listener = Owner = null;\n    return t ? t.done : undefined;\n  });\n}\nfunction useTransition() {\n  return [transPending, startTransition];\n}\nfunction resumeEffects(e) {\n  Effects.push.apply(Effects, e);\n  e.length = 0;\n}\nfunction createContext(defaultValue) {\n  const id = Symbol(\"context\");\n  return {\n    id,\n    Provider: createProvider(id),\n    defaultValue\n  };\n}\nfunction useContext(context) {\n  let ctx;\n  return (ctx = lookup(Owner, context.id)) !== undefined ? ctx : context.defaultValue;\n}\nfunction children(fn) {\n  const children = createMemo(fn);\n  return createMemo(() => resolveChildren(children()));\n}\nlet SuspenseContext;\nfunction getSuspenseContext() {\n  return SuspenseContext || (SuspenseContext = createContext({}));\n}\nfunction enableExternalSource(factory) {\n  if (ExternalSourceFactory) {\n    const oldFactory = ExternalSourceFactory;\n    ExternalSourceFactory = (fn, trigger) => {\n      const oldSource = oldFactory(fn, trigger);\n      const source = factory(x => oldSource.track(x), trigger);\n      return {\n        track: x => source.track(x),\n        dispose() {\n          source.dispose();\n          oldSource.dispose();\n        }\n      };\n    };\n  } else {\n    ExternalSourceFactory = factory;\n  }\n}\nfunction readSignal() {\n  const runningTransition = Transition && Transition.running;\n  if (this.sources && (!runningTransition && this.state || runningTransition && this.tState)) {\n    const updates = Updates;\n    Updates = null;\n    !runningTransition && this.state === STALE || runningTransition && this.tState === STALE ? updateComputation(this) : lookUpstream(this);\n    Updates = updates;\n  }\n  if (Listener) {\n    const sSlot = this.observers ? this.observers.length : 0;\n    if (!Listener.sources) {\n      Listener.sources = [this];\n      Listener.sourceSlots = [sSlot];\n    } else {\n      Listener.sources.push(this);\n      Listener.sourceSlots.push(sSlot);\n    }\n    if (!this.observers) {\n      this.observers = [Listener];\n      this.observerSlots = [Listener.sources.length - 1];\n    } else {\n      this.observers.push(Listener);\n      this.observerSlots.push(Listener.sources.length - 1);\n    }\n  }\n  if (runningTransition && Transition.sources.has(this)) return this.tValue;\n  return this.value;\n}\nfunction writeSignal(node, value, isComp) {\n  if (Pending) {\n    if (node.pending === NOTPENDING) Pending.push(node);\n    node.pending = value;\n    return value;\n  }\n  if (node.comparator) {\n    if (Transition && Transition.running && Transition.sources.has(node)) {\n      if (node.comparator(node.tValue, value)) return value;\n    } else if (node.comparator(node.value, value)) return value;\n  }\n  let TransitionRunning = false;\n  if (Transition) {\n    TransitionRunning = Transition.running;\n    if (TransitionRunning || !isComp && Transition.sources.has(node)) {\n      Transition.sources.add(node);\n      node.tValue = value;\n    }\n    if (!TransitionRunning) node.value = value;\n  } else node.value = value;\n  if (node.observers && node.observers.length) {\n    runUpdates(() => {\n      for (let i = 0; i < node.observers.length; i += 1) {\n        const o = node.observers[i];\n        if (TransitionRunning && Transition.disposed.has(o)) continue;\n        if (TransitionRunning && !o.tState || !TransitionRunning && !o.state) {\n          if (o.pure) Updates.push(o);else Effects.push(o);\n          if (o.observers) markDownstream(o);\n        }\n        if (TransitionRunning) o.tState = STALE;else o.state = STALE;\n      }\n      if (Updates.length > 10e5) {\n        Updates = [];\n        if (false) ;\n        throw new Error();\n      }\n    }, false);\n  }\n  return value;\n}\nfunction updateComputation(node) {\n  if (!node.fn) return;\n  cleanNode(node);\n  const owner = Owner,\n        listener = Listener,\n        time = ExecCount;\n  Listener = Owner = node;\n  runComputation(node, Transition && Transition.running && Transition.sources.has(node) ? node.tValue : node.value, time);\n  if (Transition && !Transition.running && Transition.sources.has(node)) {\n    queueMicrotask(() => {\n      runUpdates(() => {\n        Transition && (Transition.running = true);\n        runComputation(node, node.tValue, time);\n      }, false);\n    });\n  }\n  Listener = listener;\n  Owner = owner;\n}\nfunction runComputation(node, value, time) {\n  let nextValue;\n  try {\n    nextValue = node.fn(value);\n  } catch (err) {\n    handleError(err);\n  }\n  if (!node.updatedAt || node.updatedAt <= time) {\n    if (node.observers && node.observers.length) {\n      writeSignal(node, nextValue, true);\n    } else if (Transition && Transition.running && node.pure) {\n      Transition.sources.add(node);\n      node.tValue = nextValue;\n    } else node.value = nextValue;\n    node.updatedAt = time;\n  }\n}\nfunction createComputation(fn, init, pure, state = STALE, options) {\n  const c = {\n    fn,\n    state: state,\n    updatedAt: null,\n    owned: null,\n    sources: null,\n    sourceSlots: null,\n    cleanups: null,\n    value: init,\n    owner: Owner,\n    context: null,\n    pure\n  };\n  if (Transition && Transition.running) {\n    c.state = 0;\n    c.tState = state;\n  }\n  if (Owner === null) ;else if (Owner !== UNOWNED) {\n    if (Transition && Transition.running && Owner.pure) {\n      if (!Owner.tOwned) Owner.tOwned = [c];else Owner.tOwned.push(c);\n    } else {\n      if (!Owner.owned) Owner.owned = [c];else Owner.owned.push(c);\n    }\n  }\n  if (ExternalSourceFactory) {\n    const [track, trigger] = createSignal(undefined, {\n      equals: false\n    });\n    const ordinary = ExternalSourceFactory(c.fn, trigger);\n    onCleanup(() => ordinary.dispose());\n    const triggerInTransition = () => startTransition(trigger).then(() => inTransition.dispose());\n    const inTransition = ExternalSourceFactory(c.fn, triggerInTransition);\n    c.fn = x => {\n      track();\n      return Transition && Transition.running ? inTransition.track(x) : ordinary.track(x);\n    };\n  }\n  return c;\n}\nfunction runTop(node) {\n  const runningTransition = Transition && Transition.running;\n  if (!runningTransition && node.state === 0 || runningTransition && node.tState === 0) return;\n  if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) return lookUpstream(node);\n  if (node.suspense && untrack(node.suspense.inFallback)) return node.suspense.effects.push(node);\n  const ancestors = [node];\n  while ((node = node.owner) && (!node.updatedAt || node.updatedAt < ExecCount)) {\n    if (runningTransition && Transition.disposed.has(node)) return;\n    if (!runningTransition && node.state || runningTransition && node.tState) ancestors.push(node);\n  }\n  for (let i = ancestors.length - 1; i >= 0; i--) {\n    node = ancestors[i];\n    if (runningTransition) {\n      let top = node,\n          prev = ancestors[i + 1];\n      while ((top = top.owner) && top !== prev) {\n        if (Transition.disposed.has(top)) return;\n      }\n    }\n    if (!runningTransition && node.state === STALE || runningTransition && node.tState === STALE) {\n      updateComputation(node);\n    } else if (!runningTransition && node.state === PENDING || runningTransition && node.tState === PENDING) {\n      const updates = Updates;\n      Updates = null;\n      lookUpstream(node, ancestors[0]);\n      Updates = updates;\n    }\n  }\n}\nfunction runUpdates(fn, init) {\n  if (Updates) return fn();\n  let wait = false;\n  if (!init) Updates = [];\n  if (Effects) wait = true;else Effects = [];\n  ExecCount++;\n  try {\n    const res = fn();\n    completeUpdates(wait);\n    return res;\n  } catch (err) {\n    if (!Updates) Effects = null;\n    handleError(err);\n  }\n}\nfunction completeUpdates(wait) {\n  if (Updates) {\n    if (Scheduler && Transition && Transition.running) scheduleQueue(Updates);else runQueue(Updates);\n    Updates = null;\n  }\n  if (wait) return;\n  let res;\n  if (Transition && Transition.running) {\n    if (Transition.promises.size || Transition.queue.size) {\n      Transition.running = false;\n      Transition.effects.push.apply(Transition.effects, Effects);\n      Effects = null;\n      setTransPending(true);\n      return;\n    }\n    const sources = Transition.sources;\n    const disposed = Transition.disposed;\n    res = Transition.resolve;\n    for (const e of Effects) {\n      \"tState\" in e && (e.state = e.tState);\n      delete e.tState;\n    }\n    Transition = null;\n    batch(() => {\n      for (const d of disposed) cleanNode(d);\n      for (const v of sources) {\n        v.value = v.tValue;\n        if (v.owned) {\n          for (let i = 0, len = v.owned.length; i < len; i++) cleanNode(v.owned[i]);\n        }\n        if (v.tOwned) v.owned = v.tOwned;\n        delete v.tValue;\n        delete v.tOwned;\n        v.tState = 0;\n      }\n      setTransPending(false);\n    });\n  }\n  if (Effects.length) batch(() => {\n    runEffects(Effects);\n    Effects = null;\n  });else {\n    Effects = null;\n  }\n  if (res) res();\n}\nfunction runQueue(queue) {\n  for (let i = 0; i < queue.length; i++) runTop(queue[i]);\n}\nfunction scheduleQueue(queue) {\n  for (let i = 0; i < queue.length; i++) {\n    const item = queue[i];\n    const tasks = Transition.queue;\n    if (!tasks.has(item)) {\n      tasks.add(item);\n      Scheduler(() => {\n        tasks.delete(item);\n        runUpdates(() => {\n          Transition.running = true;\n          runTop(item);\n          if (!tasks.size) {\n            Effects.push.apply(Effects, Transition.effects);\n            Transition.effects = [];\n          }\n        }, false);\n        Transition && (Transition.running = false);\n      });\n    }\n  }\n}\nfunction runUserEffects(queue) {\n  let i,\n      userLength = 0;\n  for (i = 0; i < queue.length; i++) {\n    const e = queue[i];\n    if (!e.user) runTop(e);else queue[userLength++] = e;\n  }\n  if (sharedConfig.context) setHydrateContext();\n  const resume = queue.length;\n  for (i = 0; i < userLength; i++) runTop(queue[i]);\n  for (i = resume; i < queue.length; i++) runTop(queue[i]);\n}\nfunction lookUpstream(node, ignore) {\n  const runningTransition = Transition && Transition.running;\n  if (runningTransition) node.tState = 0;else node.state = 0;\n  for (let i = 0; i < node.sources.length; i += 1) {\n    const source = node.sources[i];\n    if (source.sources) {\n      if (!runningTransition && source.state === STALE || runningTransition && source.tState === STALE) {\n        if (source !== ignore) runTop(source);\n      } else if (!runningTransition && source.state === PENDING || runningTransition && source.tState === PENDING) lookUpstream(source, ignore);\n    }\n  }\n}\nfunction markDownstream(node) {\n  const runningTransition = Transition && Transition.running;\n  for (let i = 0; i < node.observers.length; i += 1) {\n    const o = node.observers[i];\n    if (!runningTransition && !o.state || runningTransition && !o.tState) {\n      if (runningTransition) o.tState = PENDING;else o.state = PENDING;\n      if (o.pure) Updates.push(o);else Effects.push(o);\n      o.observers && markDownstream(o);\n    }\n  }\n}\nfunction cleanNode(node) {\n  let i;\n  if (node.sources) {\n    while (node.sources.length) {\n      const source = node.sources.pop(),\n            index = node.sourceSlots.pop(),\n            obs = source.observers;\n      if (obs && obs.length) {\n        const n = obs.pop(),\n              s = source.observerSlots.pop();\n        if (index < obs.length) {\n          n.sourceSlots[s] = index;\n          obs[index] = n;\n          source.observerSlots[index] = s;\n        }\n      }\n    }\n  }\n  if (Transition && Transition.running && node.pure) {\n    if (node.tOwned) {\n      for (i = 0; i < node.tOwned.length; i++) cleanNode(node.tOwned[i]);\n      delete node.tOwned;\n    }\n    reset(node, true);\n  } else if (node.owned) {\n    for (i = 0; i < node.owned.length; i++) cleanNode(node.owned[i]);\n    node.owned = null;\n  }\n  if (node.cleanups) {\n    for (i = 0; i < node.cleanups.length; i++) node.cleanups[i]();\n    node.cleanups = null;\n  }\n  if (Transition && Transition.running) node.tState = 0;else node.state = 0;\n  node.context = null;\n}\nfunction reset(node, top) {\n  if (!top) {\n    node.tState = 0;\n    Transition.disposed.add(node);\n  }\n  if (node.owned) {\n    for (let i = 0; i < node.owned.length; i++) reset(node.owned[i]);\n  }\n}\nfunction handleError(err) {\n  const fns = ERROR && lookup(Owner, ERROR);\n  if (!fns) throw err;\n  for (const f of fns) f(err);\n}\nfunction lookup(owner, key) {\n  return owner ? owner.context && owner.context[key] !== undefined ? owner.context[key] : lookup(owner.owner, key) : undefined;\n}\nfunction resolveChildren(children) {\n  if (typeof children === \"function\" && !children.length) return resolveChildren(children());\n  if (Array.isArray(children)) {\n    const results = [];\n    for (let i = 0; i < children.length; i++) {\n      const result = resolveChildren(children[i]);\n      Array.isArray(result) ? results.push.apply(results, result) : results.push(result);\n    }\n    return results;\n  }\n  return children;\n}\nfunction createProvider(id) {\n  return function provider(props) {\n    let res;\n    createComputed(() => res = untrack(() => {\n      Owner.context = {\n        [id]: props.value\n      };\n      return children(() => props.children);\n    }));\n    return res;\n  };\n}\n\nfunction observable(input) {\n  return {\n    subscribe(observer) {\n      if (!(observer instanceof Object) || observer == null) {\n        throw new TypeError(\"Expected the observer to be an object.\");\n      }\n      const handler = typeof observer === 'function' ? observer : observer.next && observer.next.bind(observer);\n      if (!handler) {\n        return {\n          unsubscribe() {}\n        };\n      }\n      const dispose = createRoot(disposer => {\n        createComputed(() => {\n          const v = input();\n          untrack(() => handler(v));\n        });\n        return disposer;\n      });\n      if (getOwner()) onCleanup(dispose);\n      return {\n        unsubscribe() {\n          dispose();\n        }\n      };\n    },\n    [Symbol.observable || \"@@observable\"]() {\n      return this;\n    }\n  };\n}\nfunction from(producer) {\n  const [s, set] = createSignal(undefined, {\n    equals: false\n  });\n  if (\"subscribe\" in producer) {\n    const unsub = producer.subscribe(v => set(() => v));\n    onCleanup(() => \"unsubscribe\" in unsub ? unsub.unsubscribe() : unsub());\n  } else {\n    const clean = producer(set);\n    onCleanup(clean);\n  }\n  return s;\n}\n\nconst FALLBACK = Symbol(\"fallback\");\nfunction dispose(d) {\n  for (let i = 0; i < d.length; i++) d[i]();\n}\nfunction mapArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      len = 0,\n      indexes = mapFn.length > 1 ? [] : null;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    let newItems = list() || [],\n        i,\n        j;\n    newItems[$TRACK];\n    return untrack(() => {\n      let newLen = newItems.length,\n          newIndices,\n          newIndicesNext,\n          temp,\n          tempdisposers,\n          tempIndexes,\n          start,\n          end,\n          newEnd,\n          item;\n      if (newLen === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          indexes && (indexes = []);\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n      }\n      else if (len === 0) {\n        mapped = new Array(newLen);\n        for (j = 0; j < newLen; j++) {\n          items[j] = newItems[j];\n          mapped[j] = createRoot(mapper);\n        }\n        len = newLen;\n      } else {\n        temp = new Array(newLen);\n        tempdisposers = new Array(newLen);\n        indexes && (tempIndexes = new Array(newLen));\n        for (start = 0, end = Math.min(len, newLen); start < end && items[start] === newItems[start]; start++);\n        for (end = len - 1, newEnd = newLen - 1; end >= start && newEnd >= start && items[end] === newItems[newEnd]; end--, newEnd--) {\n          temp[newEnd] = mapped[end];\n          tempdisposers[newEnd] = disposers[end];\n          indexes && (tempIndexes[newEnd] = indexes[end]);\n        }\n        newIndices = new Map();\n        newIndicesNext = new Array(newEnd + 1);\n        for (j = newEnd; j >= start; j--) {\n          item = newItems[j];\n          i = newIndices.get(item);\n          newIndicesNext[j] = i === undefined ? -1 : i;\n          newIndices.set(item, j);\n        }\n        for (i = start; i <= end; i++) {\n          item = items[i];\n          j = newIndices.get(item);\n          if (j !== undefined && j !== -1) {\n            temp[j] = mapped[i];\n            tempdisposers[j] = disposers[i];\n            indexes && (tempIndexes[j] = indexes[i]);\n            j = newIndicesNext[j];\n            newIndices.set(item, j);\n          } else disposers[i]();\n        }\n        for (j = start; j < newLen; j++) {\n          if (j in temp) {\n            mapped[j] = temp[j];\n            disposers[j] = tempdisposers[j];\n            if (indexes) {\n              indexes[j] = tempIndexes[j];\n              indexes[j](j);\n            }\n          } else mapped[j] = createRoot(mapper);\n        }\n        mapped = mapped.slice(0, len = newLen);\n        items = newItems.slice(0);\n      }\n      return mapped;\n    });\n    function mapper(disposer) {\n      disposers[j] = disposer;\n      if (indexes) {\n        const [s, set] = createSignal(j);\n        indexes[j] = set;\n        return mapFn(newItems[j], s);\n      }\n      return mapFn(newItems[j]);\n    }\n  };\n}\nfunction indexArray(list, mapFn, options = {}) {\n  let items = [],\n      mapped = [],\n      disposers = [],\n      signals = [],\n      len = 0,\n      i;\n  onCleanup(() => dispose(disposers));\n  return () => {\n    const newItems = list() || [];\n    newItems[$TRACK];\n    return untrack(() => {\n      if (newItems.length === 0) {\n        if (len !== 0) {\n          dispose(disposers);\n          disposers = [];\n          items = [];\n          mapped = [];\n          len = 0;\n          signals = [];\n        }\n        if (options.fallback) {\n          items = [FALLBACK];\n          mapped[0] = createRoot(disposer => {\n            disposers[0] = disposer;\n            return options.fallback();\n          });\n          len = 1;\n        }\n        return mapped;\n      }\n      if (items[0] === FALLBACK) {\n        disposers[0]();\n        disposers = [];\n        items = [];\n        mapped = [];\n        len = 0;\n      }\n      for (i = 0; i < newItems.length; i++) {\n        if (i < items.length && items[i] !== newItems[i]) {\n          signals[i](() => newItems[i]);\n        } else if (i >= items.length) {\n          mapped[i] = createRoot(mapper);\n        }\n      }\n      for (; i < items.length; i++) {\n        disposers[i]();\n      }\n      len = signals.length = disposers.length = newItems.length;\n      items = newItems.slice(0);\n      return mapped = mapped.slice(0, len);\n    });\n    function mapper(disposer) {\n      disposers[i] = disposer;\n      const [s, set] = createSignal(newItems[i]);\n      signals[i] = set;\n      return mapFn(s, i);\n    }\n  };\n}\n\nlet hydrationEnabled = false;\nfunction enableHydration() {\n  hydrationEnabled = true;\n}\nfunction createComponent(Comp, props) {\n  if (hydrationEnabled) {\n    if (sharedConfig.context) {\n      const c = sharedConfig.context;\n      setHydrateContext(nextHydrateContext());\n      const r = untrack(() => Comp(props || {}));\n      setHydrateContext(c);\n      return r;\n    }\n  }\n  return untrack(() => Comp(props || {}));\n}\nfunction trueFn() {\n  return true;\n}\nconst propTraps = {\n  get(_, property, receiver) {\n    if (property === $PROXY) return receiver;\n    return _.get(property);\n  },\n  has(_, property) {\n    return _.has(property);\n  },\n  set: trueFn,\n  deleteProperty: trueFn,\n  getOwnPropertyDescriptor(_, property) {\n    return {\n      configurable: true,\n      enumerable: true,\n      get() {\n        return _.get(property);\n      },\n      set: trueFn,\n      deleteProperty: trueFn\n    };\n  },\n  ownKeys(_) {\n    return _.keys();\n  }\n};\nfunction resolveSource(s) {\n  return (s = typeof s === \"function\" ? s() : s) == null ? {} : s;\n}\nfunction mergeProps(...sources) {\n  return new Proxy({\n    get(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        const v = resolveSource(sources[i])[property];\n        if (v !== undefined) return v;\n      }\n    },\n    has(property) {\n      for (let i = sources.length - 1; i >= 0; i--) {\n        if (property in resolveSource(sources[i])) return true;\n      }\n      return false;\n    },\n    keys() {\n      const keys = [];\n      for (let i = 0; i < sources.length; i++) keys.push(...Object.keys(resolveSource(sources[i])));\n      return [...new Set(keys)];\n    }\n  }, propTraps);\n}\nfunction splitProps(props, ...keys) {\n  const blocked = new Set(keys.flat());\n  const descriptors = Object.getOwnPropertyDescriptors(props);\n  const res = keys.map(k => {\n    const clone = {};\n    for (let i = 0; i < k.length; i++) {\n      const key = k[i];\n      Object.defineProperty(clone, key, descriptors[key] ? descriptors[key] : {\n        get() {\n          return props[key];\n        },\n        set() {\n          return true;\n        }\n      });\n    }\n    return clone;\n  });\n  res.push(new Proxy({\n    get(property) {\n      return blocked.has(property) ? undefined : props[property];\n    },\n    has(property) {\n      return blocked.has(property) ? false : property in props;\n    },\n    keys() {\n      return Object.keys(props).filter(k => !blocked.has(k));\n    }\n  }, propTraps));\n  return res;\n}\nfunction lazy(fn) {\n  let comp;\n  let p;\n  const wrap = props => {\n    const ctx = sharedConfig.context;\n    if (ctx) {\n      const [s, set] = createSignal();\n      (p || (p = fn())).then(mod => {\n        setHydrateContext(ctx);\n        set(() => mod.default);\n        setHydrateContext();\n      });\n      comp = s;\n    } else if (!comp) {\n      const [s] = createResource(() => (p || (p = fn())).then(mod => mod.default));\n      comp = s;\n    } else {\n      const c = comp();\n      if (c) return c(props);\n    }\n    let Comp;\n    return createMemo(() => (Comp = comp()) && untrack(() => {\n      if (!ctx) return Comp(props);\n      const c = sharedConfig.context;\n      setHydrateContext(ctx);\n      const r = Comp(props);\n      setHydrateContext(c);\n      return r;\n    }));\n  };\n  wrap.preload = () => p || ((p = fn()).then(mod => comp = () => mod.default), p);\n  return wrap;\n}\nlet counter = 0;\nfunction createUniqueId() {\n  const ctx = sharedConfig.context;\n  return ctx ? `${ctx.id}${ctx.count++}` : `cl-${counter++}`;\n}\n\nfunction For(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(mapArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Index(props) {\n  const fallback = \"fallback\" in props && {\n    fallback: () => props.fallback\n  };\n  return createMemo(indexArray(() => props.each, props.children, fallback ? fallback : undefined));\n}\nfunction Show(props) {\n  let strictEqual = false;\n  const condition = createMemo(() => props.when, undefined, {\n    equals: (a, b) => strictEqual ? a === b : !a === !b\n  });\n  return createMemo(() => {\n    const c = condition();\n    if (c) {\n      const child = props.children;\n      return (strictEqual = typeof child === \"function\" && child.length > 0) ? untrack(() => child(c)) : child;\n    }\n    return props.fallback;\n  });\n}\nfunction Switch(props) {\n  let strictEqual = false;\n  const conditions = children(() => props.children),\n        evalConditions = createMemo(() => {\n    let conds = conditions();\n    if (!Array.isArray(conds)) conds = [conds];\n    for (let i = 0; i < conds.length; i++) {\n      const c = conds[i].when;\n      if (c) return [i, c, conds[i]];\n    }\n    return [-1];\n  }, undefined, {\n    equals: (a, b) => a[0] === b[0] && (strictEqual ? a[1] === b[1] : !a[1] === !b[1]) && a[2] === b[2]\n  });\n  return createMemo(() => {\n    const [index, when, cond] = evalConditions();\n    if (index < 0) return props.fallback;\n    const c = cond.children;\n    return (strictEqual = typeof c === \"function\" && c.length > 0) ? untrack(() => c(when)) : c;\n  });\n}\nfunction Match(props) {\n  return props;\n}\nlet Errors;\nconst NoErrors = {};\nfunction resetErrorBoundaries() {\n  Errors && [...Errors].forEach(fn => fn(NoErrors));\n}\nfunction ErrorBoundary(props) {\n  let err = NoErrors;\n  if (sharedConfig.context && sharedConfig.load) {\n    err = sharedConfig.load(sharedConfig.context.id + sharedConfig.context.count) || NoErrors;\n  }\n  const [errored, setErrored] = createSignal(err);\n  Errors || (Errors = new Set());\n  Errors.add(setErrored);\n  onCleanup(() => Errors.delete(setErrored));\n  return createMemo(() => {\n    let e;\n    if ((e = errored()) !== NoErrors) {\n      const f = props.fallback;\n      return typeof f === \"function\" && f.length ? untrack(() => f(e, () => setErrored(NoErrors))) : f;\n    }\n    onError(setErrored);\n    return props.children;\n  });\n}\n\nconst SuspenseListContext = createContext();\nfunction SuspenseList(props) {\n  let suspenseSetter, showContent, showFallback;\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) {\n    const [inFallback, setFallback] = createSignal(false);\n    suspenseSetter = setFallback;\n    [showContent, showFallback] = listContext.register(inFallback);\n  }\n  const [registry, setRegistry] = createSignal([]),\n        comp = createComponent(SuspenseListContext.Provider, {\n    value: {\n      register: inFallback => {\n        const [showingContent, showContent] = createSignal(false),\n              [showingFallback, showFallback] = createSignal(false);\n        setRegistry(registry => [...registry, {\n          inFallback,\n          showContent,\n          showFallback\n        }]);\n        return [showingContent, showingFallback];\n      }\n    },\n    get children() {\n      return props.children;\n    }\n  });\n  createComputed(() => {\n    const reveal = props.revealOrder,\n          tail = props.tail,\n          visibleContent = showContent ? showContent() : true,\n          visibleFallback = showFallback ? showFallback() : true,\n          reg = registry(),\n          reverse = reveal === \"backwards\";\n    if (reveal === \"together\") {\n      const all = reg.every(i => !i.inFallback());\n      suspenseSetter && suspenseSetter(!all);\n      reg.forEach(i => {\n        i.showContent(all && visibleContent);\n        i.showFallback(visibleFallback);\n      });\n      return;\n    }\n    let stop = false;\n    for (let i = 0, len = reg.length; i < len; i++) {\n      const n = reverse ? len - i - 1 : i,\n            s = reg[n].inFallback();\n      if (!stop && !s) {\n        reg[n].showContent(visibleContent);\n        reg[n].showFallback(visibleFallback);\n      } else {\n        const next = !stop;\n        if (next && suspenseSetter) suspenseSetter(true);\n        if (!tail || next && tail === \"collapsed\") {\n          reg[n].showFallback(visibleFallback);\n        } else reg[n].showFallback(false);\n        stop = true;\n        reg[n].showContent(next);\n      }\n    }\n    if (!stop && suspenseSetter) suspenseSetter(false);\n  });\n  return comp;\n}\nfunction Suspense(props) {\n  let counter = 0,\n      showContent,\n      showFallback,\n      ctx,\n      p,\n      flicker,\n      error;\n  const [inFallback, setFallback] = createSignal(false),\n        SuspenseContext = getSuspenseContext(),\n        store = {\n    increment: () => {\n      if (++counter === 1) setFallback(true);\n    },\n    decrement: () => {\n      if (--counter === 0) setFallback(false);\n    },\n    inFallback,\n    effects: [],\n    resolved: false\n  },\n        owner = getOwner();\n  if (sharedConfig.context && sharedConfig.load) {\n    const key = sharedConfig.context.id + sharedConfig.context.count;\n    p = sharedConfig.load(key);\n    if (p) {\n      if (typeof p !== \"object\" || !(\"then\" in p)) p = Promise.resolve(p);\n      const [s, set] = createSignal(undefined, {\n        equals: false\n      });\n      flicker = s;\n      p.then(err => {\n        if ((error = err) || sharedConfig.done) return set();\n        sharedConfig.gather(key);\n        setHydrateContext(ctx);\n        set();\n        setHydrateContext();\n      });\n    } else if (p === null) sharedConfig.gather(key);\n  }\n  const listContext = useContext(SuspenseListContext);\n  if (listContext) [showContent, showFallback] = listContext.register(store.inFallback);\n  let dispose;\n  onCleanup(() => dispose && dispose());\n  return createComponent(SuspenseContext.Provider, {\n    value: store,\n    get children() {\n      return createMemo(() => {\n        if (error) throw error;\n        ctx = sharedConfig.context;\n        if (flicker) {\n          flicker();\n          return flicker = undefined;\n        }\n        if (ctx && p === undefined) setHydrateContext();\n        const rendered = createMemo(() => props.children);\n        return createMemo(() => {\n          const inFallback = store.inFallback(),\n                visibleContent = showContent ? showContent() : true,\n                visibleFallback = showFallback ? showFallback() : true;\n          dispose && dispose();\n          if ((!inFallback || p !== undefined) && visibleContent) {\n            store.resolved = true;\n            ctx = p = undefined;\n            resumeEffects(store.effects);\n            return rendered();\n          }\n          if (!visibleFallback) return;\n          return createRoot(disposer => {\n            dispose = disposer;\n            if (ctx) {\n              setHydrateContext({\n                id: ctx.id + \"f\",\n                count: 0\n              });\n              ctx = undefined;\n            }\n            return props.fallback;\n          }, owner);\n        });\n      });\n    }\n  });\n}\n\nlet DEV;\n\nexport { $DEVCOMP, $PROXY, $TRACK, DEV, ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, batch, cancelCallback, children, createComponent, createComputed, createContext, createDeferred, createEffect, createMemo, createReaction, createRenderEffect, createResource, createRoot, createSelector, createSignal, createUniqueId, enableExternalSource, enableHydration, enableScheduling, equalFn, from, getListener, getOwner, indexArray, lazy, mapArray, mergeProps, observable, on, onCleanup, onError, onMount, requestCallback, resetErrorBoundaries, runWithOwner, sharedConfig, splitProps, startTransition, untrack, useContext, useTransition };\n","import { createMemo, createRoot, createRenderEffect, sharedConfig, enableHydration, createSignal, onCleanup, splitProps, untrack } from 'solid-js';\nexport { ErrorBoundary, For, Index, Match, Show, Suspense, SuspenseList, Switch, createComponent, createRenderEffect as effect, getOwner, mergeProps } from 'solid-js';\n\nconst booleans = [\"allowfullscreen\", \"async\", \"autofocus\", \"autoplay\", \"checked\", \"controls\", \"default\", \"disabled\", \"formnovalidate\", \"hidden\", \"indeterminate\", \"ismap\", \"loop\", \"multiple\", \"muted\", \"nomodule\", \"novalidate\", \"open\", \"playsinline\", \"readonly\", \"required\", \"reversed\", \"seamless\", \"selected\"];\nconst Properties = /*#__PURE__*/new Set([\"className\", \"value\", \"readOnly\", \"formNoValidate\", \"isMap\", \"noModule\", \"playsInline\", ...booleans]);\nconst ChildProperties = /*#__PURE__*/new Set([\"innerHTML\", \"textContent\", \"innerText\", \"children\"]);\nconst Aliases = {\n  className: \"class\",\n  htmlFor: \"for\"\n};\nconst PropAliases = {\n  class: \"className\",\n  formnovalidate: \"formNoValidate\",\n  ismap: \"isMap\",\n  nomodule: \"noModule\",\n  playsinline: \"playsInline\",\n  readonly: \"readOnly\"\n};\nconst DelegatedEvents = /*#__PURE__*/new Set([\"beforeinput\", \"click\", \"dblclick\", \"contextmenu\", \"focusin\", \"focusout\", \"input\", \"keydown\", \"keyup\", \"mousedown\", \"mousemove\", \"mouseout\", \"mouseover\", \"mouseup\", \"pointerdown\", \"pointermove\", \"pointerout\", \"pointerover\", \"pointerup\", \"touchend\", \"touchmove\", \"touchstart\"]);\nconst SVGElements = /*#__PURE__*/new Set([\n\"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \"animateMotion\", \"animateTransform\", \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"hkern\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\",\n\"set\", \"stop\",\n\"svg\", \"switch\", \"symbol\", \"text\", \"textPath\",\n\"tref\", \"tspan\", \"use\", \"view\", \"vkern\"]);\nconst SVGNamespace = {\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\"\n};\nconst DOMElements = /*#__PURE__*/new Set([\"html\", \"base\", \"head\", \"link\", \"meta\", \"style\", \"title\", \"body\", \"address\", \"article\", \"aside\", \"footer\", \"header\", \"main\", \"nav\", \"section\", \"body\", \"blockquote\", \"dd\", \"div\", \"dl\", \"dt\", \"figcaption\", \"figure\", \"hr\", \"li\", \"ol\", \"p\", \"pre\", \"ul\", \"a\", \"abbr\", \"b\", \"bdi\", \"bdo\", \"br\", \"cite\", \"code\", \"data\", \"dfn\", \"em\", \"i\", \"kbd\", \"mark\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"time\", \"u\", \"var\", \"wbr\", \"area\", \"audio\", \"img\", \"map\", \"track\", \"video\", \"embed\", \"iframe\", \"object\", \"param\", \"picture\", \"portal\", \"source\", \"svg\", \"math\", \"canvas\", \"noscript\", \"script\", \"del\", \"ins\", \"caption\", \"col\", \"colgroup\", \"table\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"tr\", \"button\", \"datalist\", \"fieldset\", \"form\", \"input\", \"label\", \"legend\", \"meter\", \"optgroup\", \"option\", \"output\", \"progress\", \"select\", \"textarea\", \"details\", \"dialog\", \"menu\", \"summary\", \"details\", \"slot\", \"template\", \"acronym\", \"applet\", \"basefont\", \"bgsound\", \"big\", \"blink\", \"center\", \"content\", \"dir\", \"font\", \"frame\", \"frameset\", \"hgroup\", \"image\", \"keygen\", \"marquee\", \"menuitem\", \"nobr\", \"noembed\", \"noframes\", \"plaintext\", \"rb\", \"rtc\", \"shadow\", \"spacer\", \"strike\", \"tt\", \"xmp\", \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"basefont\", \"bdi\", \"bdo\", \"bgsound\", \"big\", \"blink\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"center\", \"cite\", \"code\", \"col\", \"colgroup\", \"content\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"dir\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"font\", \"footer\", \"form\", \"frame\", \"frameset\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"image\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noembed\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"plaintext\", \"portal\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"shadow\", \"slot\", \"small\", \"source\", \"spacer\", \"span\", \"strike\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"tt\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"xmp\", \"input\"]);\n\nfunction memo(fn, equals) {\n  return createMemo(fn, undefined, !equals ? {\n    equals\n  } : undefined);\n}\n\nfunction reconcileArrays(parentNode, a, b) {\n  let bLength = b.length,\n      aEnd = a.length,\n      bEnd = bLength,\n      aStart = 0,\n      bStart = 0,\n      after = a[aEnd - 1].nextSibling,\n      map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n      continue;\n    }\n    while (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    if (aEnd === aStart) {\n      const node = bEnd < bLength ? bStart ? b[bStart - 1].nextSibling : b[bEnd - bStart] : after;\n      while (bStart < bEnd) parentNode.insertBefore(b[bStart++], node);\n    } else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        if (!map || !map.has(a[aStart])) a[aStart].remove();\n        aStart++;\n      }\n    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      const node = a[--aEnd].nextSibling;\n      parentNode.insertBefore(b[bStart++], a[aStart++].nextSibling);\n      parentNode.insertBefore(b[--bEnd], node);\n      a[aEnd] = b[bEnd];\n    } else {\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n        while (i < bEnd) map.set(b[i], i++);\n      }\n      const index = map.get(a[aStart]);\n      if (index != null) {\n        if (bStart < index && index < bEnd) {\n          let i = aStart,\n              sequence = 1,\n              t;\n          while (++i < aEnd && i < bEnd) {\n            if ((t = map.get(a[i])) == null || t !== index + sequence) break;\n            sequence++;\n          }\n          if (sequence > index - bStart) {\n            const node = a[aStart];\n            while (bStart < index) parentNode.insertBefore(b[bStart++], node);\n          } else parentNode.replaceChild(b[bStart++], a[aStart++]);\n        } else aStart++;\n      } else a[aStart++].remove();\n    }\n  }\n}\n\nconst $$EVENTS = \"_$DX_DELEGATE\";\nfunction render(code, element, init) {\n  let disposer;\n  createRoot(dispose => {\n    disposer = dispose;\n    element === document ? code() : insert(element, code(), element.firstChild ? null : undefined, init);\n  });\n  return () => {\n    disposer();\n    element.textContent = \"\";\n  };\n}\nfunction template(html, check, isSVG) {\n  const t = document.createElement(\"template\");\n  t.innerHTML = html;\n  let node = t.content.firstChild;\n  if (isSVG) node = node.firstChild;\n  return node;\n}\nfunction delegateEvents(eventNames, document = window.document) {\n  const e = document[$$EVENTS] || (document[$$EVENTS] = new Set());\n  for (let i = 0, l = eventNames.length; i < l; i++) {\n    const name = eventNames[i];\n    if (!e.has(name)) {\n      e.add(name);\n      document.addEventListener(name, eventHandler);\n    }\n  }\n}\nfunction clearDelegatedEvents(document = window.document) {\n  if (document[$$EVENTS]) {\n    for (let name of document[$$EVENTS].keys()) document.removeEventListener(name, eventHandler);\n    delete document[$$EVENTS];\n  }\n}\nfunction setAttribute(node, name, value) {\n  if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);\n}\nfunction setAttributeNS(node, namespace, name, value) {\n  if (value == null) node.removeAttributeNS(namespace, name);else node.setAttributeNS(namespace, name, value);\n}\nfunction className(node, value) {\n  if (value == null) node.removeAttribute(\"class\");else node.className = value;\n}\nfunction addEventListener(node, name, handler, delegate) {\n  if (delegate) {\n    if (Array.isArray(handler)) {\n      node[`$$${name}`] = handler[0];\n      node[`$$${name}Data`] = handler[1];\n    } else node[`$$${name}`] = handler;\n  } else if (Array.isArray(handler)) {\n    const handlerFn = handler[0];\n    node.addEventListener(name, handler[0] = e => handlerFn.call(node, handler[1], e));\n  } else node.addEventListener(name, handler);\n}\nfunction classList(node, value, prev = {}) {\n  const classKeys = Object.keys(value || {}),\n        prevKeys = Object.keys(prev);\n  let i, len;\n  for (i = 0, len = prevKeys.length; i < len; i++) {\n    const key = prevKeys[i];\n    if (!key || key === \"undefined\" || value[key]) continue;\n    toggleClassKey(node, key, false);\n    delete prev[key];\n  }\n  for (i = 0, len = classKeys.length; i < len; i++) {\n    const key = classKeys[i],\n          classValue = !!value[key];\n    if (!key || key === \"undefined\" || prev[key] === classValue || !classValue) continue;\n    toggleClassKey(node, key, true);\n    prev[key] = classValue;\n  }\n  return prev;\n}\nfunction style(node, value, prev = {}) {\n  const nodeStyle = node.style;\n  const prevString = typeof prev === \"string\";\n  if (value == null && prevString || typeof value === \"string\") return nodeStyle.cssText = value;\n  prevString && (nodeStyle.cssText = undefined, prev = {});\n  value || (value = {});\n  let v, s;\n  for (s in prev) {\n    value[s] == null && nodeStyle.removeProperty(s);\n    delete prev[s];\n  }\n  for (s in value) {\n    v = value[s];\n    if (v !== prev[s]) {\n      nodeStyle.setProperty(s, v);\n      prev[s] = v;\n    }\n  }\n  return prev;\n}\nfunction spread(node, accessor, isSVG, skipChildren) {\n  if (typeof accessor === \"function\") {\n    createRenderEffect(current => spreadExpression(node, accessor(), current, isSVG, skipChildren));\n  } else spreadExpression(node, accessor, undefined, isSVG, skipChildren);\n}\nfunction dynamicProperty(props, key) {\n  const src = props[key];\n  Object.defineProperty(props, key, {\n    get() {\n      return src();\n    },\n    enumerable: true\n  });\n  return props;\n}\nfunction innerHTML(parent, content) {\n  !sharedConfig.context && (parent.innerHTML = content);\n}\nfunction insert(parent, accessor, marker, initial) {\n  if (marker !== undefined && !initial) initial = [];\n  if (typeof accessor !== \"function\") return insertExpression(parent, accessor, initial, marker);\n  createRenderEffect(current => insertExpression(parent, accessor(), current, marker), initial);\n}\nfunction assign(node, props, isSVG, skipChildren, prevProps = {}, skipRef = false) {\n  props || (props = {});\n  for (const prop in prevProps) {\n    if (!(prop in props)) {\n      if (prop === \"children\") continue;\n      assignProp(node, prop, null, prevProps[prop], isSVG, skipRef);\n    }\n  }\n  for (const prop in props) {\n    if (prop === \"children\") {\n      if (!skipChildren) insertExpression(node, props.children);\n      continue;\n    }\n    const value = props[prop];\n    prevProps[prop] = assignProp(node, prop, value, prevProps[prop], isSVG, skipRef);\n  }\n}\nfunction hydrate$1(code, element, options = {}) {\n  sharedConfig.completed = globalThis._$HY.completed;\n  sharedConfig.events = globalThis._$HY.events;\n  sharedConfig.load = globalThis._$HY.load;\n  sharedConfig.gather = root => gatherHydratable(element, root);\n  sharedConfig.registry = new Map();\n  sharedConfig.context = {\n    id: options.renderId || \"\",\n    count: 0\n  };\n  gatherHydratable(element, options.renderId);\n  const dispose = render(code, element, [...element.childNodes]);\n  sharedConfig.context = null;\n  return dispose;\n}\nfunction getNextElement(template) {\n  let node, key;\n  if (!sharedConfig.context || !(node = sharedConfig.registry.get(key = getHydrationKey()))) {\n    return template.cloneNode(true);\n  }\n  if (sharedConfig.completed) sharedConfig.completed.add(node);\n  sharedConfig.registry.delete(key);\n  return node;\n}\nfunction getNextMatch(el, nodeName) {\n  while (el && el.localName !== nodeName) el = el.nextSibling;\n  return el;\n}\nfunction getNextMarker(start) {\n  let end = start,\n      count = 0,\n      current = [];\n  if (sharedConfig.context) {\n    while (end) {\n      if (end.nodeType === 8) {\n        const v = end.nodeValue;\n        if (v === \"#\") count++;else if (v === \"/\") {\n          if (count === 0) return [end, current];\n          count--;\n        }\n      }\n      current.push(end);\n      end = end.nextSibling;\n    }\n  }\n  return [end, current];\n}\nfunction runHydrationEvents() {\n  if (sharedConfig.events && !sharedConfig.events.queued) {\n    queueMicrotask(() => {\n      const {\n        completed,\n        events\n      } = sharedConfig;\n      events.queued = false;\n      while (events.length) {\n        const [el, e] = events[0];\n        if (!completed.has(el)) return;\n        eventHandler(e);\n        events.shift();\n      }\n    });\n    sharedConfig.events.queued = true;\n  }\n}\nfunction toPropertyName(name) {\n  return name.toLowerCase().replace(/-([a-z])/g, (_, w) => w.toUpperCase());\n}\nfunction toggleClassKey(node, key, value) {\n  const classNames = key.trim().split(/\\s+/);\n  for (let i = 0, nameLen = classNames.length; i < nameLen; i++) node.classList.toggle(classNames[i], value);\n}\nfunction assignProp(node, prop, value, prev, isSVG, skipRef) {\n  let isCE, isProp, isChildProp;\n  if (prop === \"style\") return style(node, value, prev);\n  if (prop === \"classList\") return classList(node, value, prev);\n  if (value === prev) return prev;\n  if (prop === \"ref\") {\n    if (!skipRef) {\n      value(node);\n    }\n  } else if (prop.slice(0, 3) === \"on:\") {\n    const e = prop.slice(3);\n    prev && node.removeEventListener(e, prev);\n    value && node.addEventListener(e, value);\n  } else if (prop.slice(0, 10) === \"oncapture:\") {\n    const e = prop.slice(10);\n    prev && node.removeEventListener(e, prev, true);\n    value && node.addEventListener(e, value, true);\n  } else if (prop.slice(0, 2) === \"on\") {\n    const name = prop.slice(2).toLowerCase();\n    const delegate = DelegatedEvents.has(name);\n    if (!delegate && prev) {\n      const h = Array.isArray(prev) ? prev[0] : prev;\n      node.removeEventListener(name, h);\n    }\n    if (delegate || value) {\n      addEventListener(node, name, value, delegate);\n      delegate && delegateEvents([name]);\n    }\n  } else if ((isChildProp = ChildProperties.has(prop)) || !isSVG && (PropAliases[prop] || (isProp = Properties.has(prop))) || (isCE = node.nodeName.includes(\"-\"))) {\n    if (prop === \"class\" || prop === \"className\") className(node, value);else if (isCE && !isProp && !isChildProp) node[toPropertyName(prop)] = value;else node[PropAliases[prop] || prop] = value;\n  } else {\n    const ns = isSVG && prop.indexOf(\":\") > -1 && SVGNamespace[prop.split(\":\")[0]];\n    if (ns) setAttributeNS(node, ns, prop, value);else setAttribute(node, Aliases[prop] || prop, value);\n  }\n  return value;\n}\nfunction eventHandler(e) {\n  const key = `$$${e.type}`;\n  let node = e.composedPath && e.composedPath()[0] || e.target;\n  if (e.target !== node) {\n    Object.defineProperty(e, \"target\", {\n      configurable: true,\n      value: node\n    });\n  }\n  Object.defineProperty(e, \"currentTarget\", {\n    configurable: true,\n    get() {\n      return node || document;\n    }\n  });\n  if (sharedConfig.registry && !sharedConfig.done) {\n    sharedConfig.done = true;\n    document.querySelectorAll(\"[id^=pl-]\").forEach(elem => elem.remove());\n  }\n  while (node !== null) {\n    const handler = node[key];\n    if (handler && !node.disabled) {\n      const data = node[`${key}Data`];\n      data !== undefined ? handler.call(node, data, e) : handler.call(node, e);\n      if (e.cancelBubble) return;\n    }\n    node = node.host && node.host !== node && node.host instanceof Node ? node.host : node.parentNode;\n  }\n}\nfunction spreadExpression(node, props, prevProps = {}, isSVG, skipChildren) {\n  props || (props = {});\n  if (!skipChildren && \"children\" in props) {\n    createRenderEffect(() => prevProps.children = insertExpression(node, props.children, prevProps.children));\n  }\n  props.ref && props.ref(node);\n  createRenderEffect(() => assign(node, props, isSVG, true, prevProps, true));\n  return prevProps;\n}\nfunction insertExpression(parent, value, current, marker, unwrapArray) {\n  if (sharedConfig.context && !current) current = [...parent.childNodes];\n  while (typeof current === \"function\") current = current();\n  if (value === current) return current;\n  const t = typeof value,\n        multi = marker !== undefined;\n  parent = multi && current[0] && current[0].parentNode || parent;\n  if (t === \"string\" || t === \"number\") {\n    if (sharedConfig.context) return current;\n    if (t === \"number\") value = value.toString();\n    if (multi) {\n      let node = current[0];\n      if (node && node.nodeType === 3) {\n        node.data = value;\n      } else node = document.createTextNode(value);\n      current = cleanChildren(parent, current, marker, node);\n    } else {\n      if (current !== \"\" && typeof current === \"string\") {\n        current = parent.firstChild.data = value;\n      } else current = parent.textContent = value;\n    }\n  } else if (value == null || t === \"boolean\") {\n    if (sharedConfig.context) return current;\n    current = cleanChildren(parent, current, marker);\n  } else if (t === \"function\") {\n    createRenderEffect(() => {\n      let v = value();\n      while (typeof v === \"function\") v = v();\n      current = insertExpression(parent, v, current, marker);\n    });\n    return () => current;\n  } else if (Array.isArray(value)) {\n    const array = [];\n    const currentArray = current && Array.isArray(current);\n    if (normalizeIncomingArray(array, value, current, unwrapArray)) {\n      createRenderEffect(() => current = insertExpression(parent, array, current, marker, true));\n      return () => current;\n    }\n    if (sharedConfig.context) {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].parentNode) return current = array;\n      }\n    }\n    if (array.length === 0) {\n      current = cleanChildren(parent, current, marker);\n      if (multi) return current;\n    } else if (currentArray) {\n      if (current.length === 0) {\n        appendNodes(parent, array, marker);\n      } else reconcileArrays(parent, current, array);\n    } else {\n      current && cleanChildren(parent);\n      appendNodes(parent, array);\n    }\n    current = array;\n  } else if (value instanceof Node) {\n    if (sharedConfig.context && value.parentNode) return current = multi ? [value] : value;\n    if (Array.isArray(current)) {\n      if (multi) return current = cleanChildren(parent, current, marker, value);\n      cleanChildren(parent, current, null, value);\n    } else if (current == null || current === \"\" || !parent.firstChild) {\n      parent.appendChild(value);\n    } else parent.replaceChild(value, parent.firstChild);\n    current = value;\n  } else ;\n  return current;\n}\nfunction normalizeIncomingArray(normalized, array, current, unwrap) {\n  let dynamic = false;\n  for (let i = 0, len = array.length; i < len; i++) {\n    let item = array[i],\n        prev = current && current[i];\n    if (item instanceof Node) {\n      normalized.push(item);\n    } else if (item == null || item === true || item === false) ; else if (Array.isArray(item)) {\n      dynamic = normalizeIncomingArray(normalized, item, prev) || dynamic;\n    } else if ((typeof item) === \"function\") {\n      if (unwrap) {\n        while (typeof item === \"function\") item = item();\n        dynamic = normalizeIncomingArray(normalized, Array.isArray(item) ? item : [item], prev) || dynamic;\n      } else {\n        normalized.push(item);\n        dynamic = true;\n      }\n    } else {\n      const value = String(item);\n      if (prev && prev.nodeType === 3 && prev.data === value) {\n        normalized.push(prev);\n      } else normalized.push(document.createTextNode(value));\n    }\n  }\n  return dynamic;\n}\nfunction appendNodes(parent, array, marker) {\n  for (let i = 0, len = array.length; i < len; i++) parent.insertBefore(array[i], marker);\n}\nfunction cleanChildren(parent, current, marker, replacement) {\n  if (marker === undefined) return parent.textContent = \"\";\n  const node = replacement || document.createTextNode(\"\");\n  if (current.length) {\n    let inserted = false;\n    for (let i = current.length - 1; i >= 0; i--) {\n      const el = current[i];\n      if (node !== el) {\n        const isParent = el.parentNode === parent;\n        if (!inserted && !i) isParent ? parent.replaceChild(node, el) : parent.insertBefore(node, marker);else isParent && el.remove();\n      } else inserted = true;\n    }\n  } else parent.insertBefore(node, marker);\n  return [node];\n}\nfunction gatherHydratable(element, root) {\n  const templates = element.querySelectorAll(`*[data-hk]`);\n  for (let i = 0; i < templates.length; i++) {\n    const node = templates[i];\n    const key = node.getAttribute(\"data-hk\");\n    if ((!root || key.startsWith(root)) && !sharedConfig.registry.has(key)) sharedConfig.registry.set(key, node);\n  }\n}\nfunction getHydrationKey() {\n  const hydrate = sharedConfig.context;\n  return `${hydrate.id}${hydrate.count++}`;\n}\nfunction Assets() {\n  return;\n}\nfunction NoHydration(props) {\n  return sharedConfig.context ? undefined : props.children;\n}\n\nfunction throwInBrowser(func) {\n  const err = new Error(`${func.name} is not supported in the browser, returning undefined`);\n  console.error(err);\n}\nfunction renderToString(fn, options) {\n  throwInBrowser(renderToString);\n}\nfunction renderToStringAsync(fn, options) {\n  throwInBrowser(renderToStringAsync);\n}\nfunction renderToStream(fn, options) {\n  throwInBrowser(renderToStream);\n}\nfunction ssr(template, ...nodes) {}\nfunction resolveSSRNode(node) {}\nfunction ssrClassList(value) {}\nfunction ssrStyle(value) {}\nfunction ssrSpread(accessor) {}\nfunction ssrAttribute(key, value) {}\nfunction ssrHydrationKey() {}\nfunction escape(html) {}\nfunction generateHydrationScript() {}\n\nconst isServer = false;\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nfunction createElement(tagName, isSVG = false) {\n  return isSVG ? document.createElementNS(SVG_NAMESPACE, tagName) : document.createElement(tagName);\n}\nconst hydrate = (...args) => {\n  enableHydration();\n  return hydrate$1(...args);\n};\nfunction Portal(props) {\n  const {\n    useShadow\n  } = props,\n        marker = document.createTextNode(\"\"),\n        mount = props.mount || document.body;\n  function renderPortal() {\n    if (sharedConfig.context) {\n      const [s, set] = createSignal(false);\n      queueMicrotask(() => set(true));\n      return () => s() && props.children;\n    } else return () => props.children;\n  }\n  if (mount instanceof HTMLHeadElement) {\n    const [clean, setClean] = createSignal(false);\n    const cleanup = () => setClean(true);\n    createRoot(dispose => insert(mount, () => !clean() ? renderPortal()() : dispose(), null));\n    onCleanup(() => {\n      if (sharedConfig.context) queueMicrotask(cleanup);else cleanup();\n    });\n  } else {\n    const container = createElement(props.isSVG ? \"g\" : \"div\", props.isSVG),\n          renderRoot = useShadow && container.attachShadow ? container.attachShadow({\n      mode: \"open\"\n    }) : container;\n    Object.defineProperty(container, \"host\", {\n      get() {\n        return marker.parentNode;\n      }\n    });\n    insert(renderRoot, renderPortal());\n    mount.appendChild(container);\n    props.ref && props.ref(container);\n    onCleanup(() => mount.removeChild(container));\n  }\n  return marker;\n}\nfunction Dynamic(props) {\n  const [p, others] = splitProps(props, [\"component\"]);\n  const cached = createMemo(() => p.component);\n  return createMemo(() => {\n    const component = cached();\n    switch (typeof component) {\n      case \"function\":\n        return untrack(() => component(others));\n      case \"string\":\n        const isSvg = SVGElements.has(component);\n        const el = sharedConfig.context ? getNextElement() : createElement(component, isSvg);\n        spread(el, others, isSvg);\n        return el;\n    }\n  });\n}\n\nexport { Aliases, Assets, ChildProperties, DOMElements, DelegatedEvents, Dynamic, Assets as HydrationScript, NoHydration, Portal, PropAliases, Properties, SVGElements, SVGNamespace, addEventListener, assign, classList, className, clearDelegatedEvents, delegateEvents, dynamicProperty, escape, generateHydrationScript, getHydrationKey, getNextElement, getNextMarker, getNextMatch, hydrate, innerHTML, insert, isServer, memo, render, renderToStream, renderToString, renderToStringAsync, resolveSSRNode, runHydrationEvents, setAttribute, setAttributeNS, spread, ssr, ssrAttribute, ssrClassList, ssrHydrationKey, ssrSpread, ssrStyle, style, template };\n"],"names":["sharedConfig","setHydrateContext","context","nextHydrateContext","equalFn","a","b","$PROXY","signalOptions","runEffects","runQueue","NOTPENDING","STALE","PENDING","UNOWNED","Owner","Transition","Listener","Pending","Updates","Effects","ExecCount","createRoot","fn","detachedOwner","listener","owner","unowned","root","updateFn","cleanNode","runUpdates","createComputed","value","options","c","createComputation","updateComputation","createRenderEffect","createMemo","readSignal","batch","result","q","i","data","pending","writeSignal","untrack","createContext","defaultValue","id","createProvider","useContext","ctx","lookup","children","resolveChildren","runningTransition","updates","lookUpstream","sSlot","node","isComp","TransitionRunning","markDownstream","time","runComputation","nextValue","err","handleError","init","pure","state","runTop","ancestors","wait","res","completeUpdates","queue","ignore","source","o","index","obs","n","s","key","results","props","hydrationEnabled","createComponent","Comp","r","trueFn","propTraps","_","property","receiver","resolveSource","mergeProps","sources","v","keys","booleans","Properties","ChildProperties","Aliases","PropAliases","DelegatedEvents","SVGNamespace","reconcileArrays","parentNode","bLength","aEnd","bEnd","aStart","bStart","after","map","sequence","t","$$EVENTS","render","code","element","disposer","dispose","insert","template","html","check","isSVG","delegateEvents","eventNames","document","e","l","name","eventHandler","setAttribute","setAttributeNS","namespace","className","addEventListener","handler","delegate","handlerFn","classList","prev","classKeys","prevKeys","len","toggleClassKey","classValue","style","nodeStyle","prevString","spread","accessor","skipChildren","current","spreadExpression","parent","marker","initial","insertExpression","assign","prevProps","skipRef","prop","assignProp","toPropertyName","w","classNames","nameLen","isCE","isProp","isChildProp","h","ns","elem","unwrapArray","multi","cleanChildren","array","currentArray","normalizeIncomingArray","appendNodes","normalized","unwrap","dynamic","item","replacement","inserted","el","isParent"],"mappings":"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"}