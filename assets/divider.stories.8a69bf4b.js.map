{"version":3,"file":"divider.stories.8a69bf4b.js","sources":["../../../semi-foundation/divider/constants.ts","../../divider/index.tsx","../../divider/_story/Demo.tsx"],"sourcesContent":["import {\n    BASE_CLASS_PREFIX\n} from '../base/constants';\n\nconst cssClasses = {\n    PREFIX: `${BASE_CLASS_PREFIX }`,\n} as const;\n\nconst strings = {\n    LAYOUT: ['vertical', 'horizontal']\n} as const;\n\nexport {\n    cssClasses,\n    strings\n};","import { cssClasses } from '@douyinfe/semi-foundation/divider/constants';\nimport '@douyinfe/semi-foundation/divider/divider.scss';\nimport { JSX } from 'solid-js';\n\nconst prefixCls = cssClasses.PREFIX;\n\nexport interface DividerProps {\n  /** The position of title inside divider */\n  align?: 'left' | 'right' | 'center';\n  /** space between divider and surroundings **/\n  margin?: number | string;\n  /** The wrapped title */\n  children?: JSX.Element | string;\n  /** Style class name */\n  className?: string;\n  /** Whether line is dashed  */\n  dashed?: boolean;\n  /** The direction type of divider */\n  layout?: 'horizontal' | 'vertical';\n  /** Divider inline style */\n  style?: JSX.ElementAttributesProperty;\n}\n\nconst Divider: Component<DividerProps> = ({\n  layout = 'horizontal',\n  dashed,\n  align = 'center',\n  className,\n  margin,\n  style,\n  children,\n  ...rest\n}) => {\n  const dividerClassNames = {\n    classList: {\n      [`${className}`]: className !== undefined,\n      [`${prefixCls}-divider`]: true,\n      [`${prefixCls}-divider-horizontal`]: layout === 'horizontal',\n      [`${prefixCls}-divider-vertical`]: layout === 'vertical',\n      [`${prefixCls}-divider-dashed`]: !!dashed,\n      [`${prefixCls}-divider-with-text`]: children && layout === 'horizontal',\n      [`${prefixCls}-divider-with-text-${align}`]: children && layout === 'horizontal',\n    } as Record<string, boolean>,\n  };\n\n  let overrideDefaultStyle = {};\n  if (margin !== undefined) {\n    if (layout === 'vertical') {\n      overrideDefaultStyle = {\n        marginLeft: margin,\n        marginRight: margin,\n      };\n    } else if (layout === 'horizontal') {\n      overrideDefaultStyle = {\n        marginTop: margin,\n        marginBottom: margin,\n      };\n    }\n  }\n\n  return (\n    <div {...rest} classList={dividerClassNames.classList} style={{ ...overrideDefaultStyle, ...style }}>\n      {children && layout === 'horizontal' ? (\n        typeof children === 'string' ? (\n          <span class={`${prefixCls}-divider_inner-text`} x-semi-prop=\"children\">\n            {children}\n          </span>\n        ) : (\n          children\n        )\n      ) : null}\n    </div>\n  );\n};\n\nexport default Divider;\n","import Divider from '../index';\n\nconst Demo = () => {\n    return (\n        <>\n            <p>Semi Design </p>\n            <Divider />\n            <p>Semi Design </p>\n            <Divider />\n            <p>Semi Design </p>\n        </>\n    );\n};\n\nexport default Demo;\n"],"names":["cssClasses","PREFIX","BASE_CLASS_PREFIX","prefixCls","Divider","layout","align","dividerClassNames","classList","className","dashed","overrideDefaultStyle","marginLeft","marginRight","marginTop","marginBottom","_el$","_tmpl$","_$insert","_el$2","_tmpl$2","_$className","children","_v$","_v$2","_p$","Demo","cloneNode","_$createComponent","Demo$1"],"mappings":"6HAIA,MAAMA,EAAa,CACfC,OAAS,GAAEC,GADI,uECAnBC,EAAAH,EAAA,OAmBAI,EAAA,CAAA,CACEC,OAAAA,EAAAA,sBAEAC,MAAAA,EAAAA,qDAHwC,IAAA,CAUxC,MAAAC,EAAA,CACEC,UAAAA,CACE,CAAA,GAAAC,KAAAA,IAAA,OACA,CAAA,GAAAN,aAAA,GACA,CAAA,GAAAA,wBAAAE,IAAA,aACA,CAAA,GAAAF,sBAAAE,IAAA,WACA,CAAA,GAAAF,oBAAA,CAAA,CAAAO,oGALS,+CAcTC,EAAAA,CACEC,WAAAA,EACAC,YAAAA,GAHJR,IAAA,eAMEM,EAAAA,CACEG,UAAAA,EACAC,aAAAA,MAKN,IAAA,CAAA,MAAAC,EAAAC,EAAA,UAAA,EAAA,sBAAAC,EAAAA,EAAAA,GAAAA,IAAAA,aAAAA,OAAAA,GAAAA,UAAAA,IAAAA,CAGM,MAAAC,EAAAC,EAAA,UAAA,EAAA,EAAAC,OAAAA,EAAAA,EAAAA,GAAAA,sBAAAA,EAAAH,EAAAA,EAAAA,CAAAA,EAAAC,CAKEG,KAAAA,EAAAA,IAAAA,QARR,MAAAC,EAAAhB,EAAA,UAAAiB,EAAA,CAAA,GAAAb,QAAAc,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,CAAA,EAAA,CAAAF,IAAAA,OAAAC,KAAAA,MAAA,CAAA,EAAAR,CAAA,IArCF,6BCrBMU,EAAO,IAIA,CAAAT,EAAAU,UAAA,EAAA,EAAAC,EAAAxB,GAAA,CAAA,oBAEAA,EALT,CAAA,GAAAa,EAAAU,UAAA,EAAA,CAGS,EAQbE,EAAeH"}